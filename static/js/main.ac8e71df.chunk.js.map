{"version":3,"sources":["pages/About.js","context/alert/alertContext.js","context/firebase/FirebaseContext.js","components/Form.js","components/Notes.js","components/Loader.js","pages/Home.js","components/Navbar.js","components/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/firebase/FirebaseReducer.js","context/firebase/FIrebaseState.js","App.js","serviceWorker.js","index.js"],"names":["About","class","AlertContext","createContext","FirebaseContext","Form","useState","value","setValue","alert","useContext","firebase","onSubmit","event","preventDefault","trim","console","log","addNote","then","show","catch","className","type","placeholder","onChange","e","target","Notes","notes","onRemove","map","note","key","id","title","date","onClick","Loader","role","Home","loading","fetchNotes","removeNote","useEffect","Navbar","to","exact","Alert","hide","alertState","state","visible","text","aria-label","aria-hidden","handlers","payload","alertReducer","action","DEFAULT","AlertState","children","useReducer","dispatch","Provider","filter","firebaseReducer","url","process","FirebaseState","showLoader","a","axios","get","res","Object","keys","data","Date","toJSON","post","name","Error","message","delete","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ac8e71df.chunk.js","sourcesContent":["import React from 'react'\n\nexport const About = () => (\n  <div class=\"jumbotron\">\n    <div class=\"container\">\n      <h1 class=\"display-4\">Лучшее React приложение</h1>\n      <p class=\"lead\">\n        Версия приложения <strong>1.0.42</strong>\n      </p>\n    </div>\n  </div>\n)","import {createContext} from 'react';\n\nexport const AlertContext = createContext();","import {createContext} from 'react';\n\nexport const FirebaseContext = createContext();","import React, {useState, useContext} from 'react'\nimport { AlertContext } from '../context/alert/alertContext';\nimport { FirebaseContext } from '../context/firebase/FirebaseContext';\n\n\n\n\n\nexport const Form = () => {\n\n  const [value, setValue] = useState('');\n  const alert = useContext(AlertContext);\n  const firebase = useContext(FirebaseContext);\n\n\n  const submitHandler = event => {\n    event.preventDefault()\n\n    if (value.trim()) {\n      console.log(\"FIREBASE\", firebase)\n      firebase.addNote(value.trim()).then(() => {\n        alert.show('Заметка была создана', 'success');\n      })\n      .catch(() => {\n        alert.show('Что-то пошло не так', 'danger');\n      }) \n\n      setValue('');\n      \n    } else {\n      alert.show('Введите название заметки')\n    }\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"form-group\">\n        <input\n          type = 'text'\n          className = 'form-control'\n          placeholder=\"Введите название заметки\"\n          value={value}\n          onChange={e => setValue(e.target.value)}\n        />\n      </div>\n    </form>\n  )\n}","import React from 'react';\n\n\nexport const Notes = ({notes, onRemove}) => {\n\n  return (\n    <ul className=\"list-group\">\n\n    \n      {notes.map(note => (\n        \n        <li \n          className=\"list-group-item note\"\n          key={note.id}\n          >\n\n          <div>\n            <strong>{note.title}</strong>\n            <small>{note.date}</small>\n          </div>\n          \n        <button \n            type=\"button\" \n            className=\"btn btn-outline-danger btn-sm\"\n            onClick = {() => onRemove(note.id)}\n            > &times; \n        </button>\n      </li>\n\n      ))}\n    </ul>\n  )\n}","import React from 'react';\n\nexport const  Loader = () => {\n  return  <div className =\"text-center\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n          </div>\n}","import React, {Fragment, useContext, useEffect} from 'react'\nimport { Form } from '../components/Form'\nimport { Notes } from '../components/Notes'\nimport { FirebaseContext } from '../context/firebase/FirebaseContext'\nimport { Loader } from '../components/Loader'\n\nexport const Home = () => {\n\n\n  const {loading, notes, fetchNotes, removeNote} = useContext(FirebaseContext)\n  \n  useEffect (() => {\n    fetchNotes()\n    //eslint-disable-next-line\n  }, [])\n\n\n  return (\n    <Fragment>\n      <Form/>\n\n      <hr/>\n\n      {loading\n        ?<Loader/> :\n        <Notes notes={notes} onRemove={removeNote}/>\n      }\n      \n    </Fragment>\n  )\n}","import React, {Fragment} from 'react';\nimport {NavLink} from 'react-router-dom';\n\nexport const Navbar = () => (\n  <nav className=\"navbar navbar-dark navbar-expand-lg bg-primary\">\n    <div className=\"navbar-brand\">\n      Note App\n    </div>\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <NavLink\n            className=\"nav-link\" \n            to='/'\n            exact>Главная\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink\n            className=\"nav-link\" \n            to='/about'>Информация\n          </NavLink>\n        </li>\n      </ul>\n  </nav>\n)\n  ","import React, {useContext} from 'react';\nimport { AlertContext } from '../context/alert/alertContext';\n\nexport const Alert = () => {\n  const {alert, hide} = useContext(AlertContext)\n  const alertState = alert.state;\n\n\n  return (\n\n   (alertState && alertState.visible) && <div className={`alert alert-${alertState.type || 'warning'} alert-dismissible`}>\n      <strong>Внимание!</strong>\n        &nbsp;{alert.state.text}\n      <button onClick={hide} type=\"button\" className=\"close\"  aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    \n   \n  )\n}","import React, {useReducer} from 'react';\nimport { SHOW_ALERT, HIDE_ALERT } from \"../types\";\n\nconst handlers = {\n    [SHOW_ALERT]: (state, {payload}) => ({...state, ...payload, visible: true }),\n    [HIDE_ALERT]: state => ({...state ,visible: false}),\n    DEFAULT: state => state\n}\n\nexport const alertReducer = (state, action) => {\n  const handle = handlers[action.type] || handlers.DEFAULT\n\n  return handle(state, action)\n}","export const SHOW_ALERT = 'SHOW_ALERT';\nexport const HIDE_ALERT = 'HIDE_ALERT';\nexport const SHOW_LOADER = 'SHOW_LOADER';\nexport const ADD_NOTE = 'ADD_NOTE';\nexport const FETCH_NOTES = 'FETCH_NOTES';\nexport const REMOVE_NOTE = 'REMOVE_NOTE';","import React, { useReducer } from 'react';\nimport { AlertContext } from './alertContext';\nimport { alertReducer } from './alertReducer';\nimport { SHOW_ALERT, HIDE_ALERT } from '../types';\n\nexport const AlertState = ({children})  => {\n\n  const [state, dispatch] = useReducer(alertReducer,  {visible:false})\n\n  const show = (text, type = 'warning') => {\n    dispatch({\n      type: SHOW_ALERT,\n      payload: {text, type}\n    })\n  }\n\n  const hide = () => dispatch({type: HIDE_ALERT})\n\n\n  return (\n    <AlertContext.Provider value={{show, hide, alert: {state}}}>\n      {children}\n    </AlertContext.Provider>\n  )\n}","\nimport { SHOW_LOADER, ADD_NOTE, FETCH_NOTES, REMOVE_NOTE } from \"../types\"\n\nconst handlers = {\n  [SHOW_LOADER]: state => ({...state, loading: true}),\n  [ADD_NOTE]: (state, {payload}) => ({\n    ...state,\n    notes: [...state.notes, payload]}),\n  \n  [FETCH_NOTES]:(state, {payload}) => ({...state, notes: payload, loading: false}),\n\n  [REMOVE_NOTE]: (state, {payload}) => ({...state, notes: state.notes.filter(note => note.id !== payload)}),\n  DEFAULT: state => state\n}\n\n\nexport const firebaseReducer = (state, action) => {\n\n  const handle = handlers[action.type] || handlers.DEFAULT\n  return handle(state, action)\n}","import React, {useReducer} from 'react';\nimport axios from 'axios'\nimport { FirebaseContext } from './FirebaseContext';\nimport { firebaseReducer } from './FirebaseReducer';\nimport { SHOW_LOADER, REMOVE_NOTE, ADD_NOTE, FETCH_NOTES } from '../types';\n\n\nconst url =  process.env.REACT_APP_DB_URL\n\nexport const FirebaseState = ({children}) => {\n\n  const initialState = {\n    notes: [],\n    loading: false,\n  }\n\n  const [state, dispatch] = useReducer(firebaseReducer, initialState)\n\n  const showLoader = () => dispatch({type: SHOW_LOADER})\n\n  const fetchNotes = async () => {\n    showLoader()\n    const res = await axios.get(`${url}/notes.json`)\n\n    let payload = Object.keys(res.data).map(key => {\n      return {\n        ...res.data[key],\n        id: key\n      }\n    })\n\n    dispatch({\n      type: FETCH_NOTES,\n      payload\n    })\n  }\n\n\n  const addNote = async title => {\n    const note = {\n      title, date: new Date().toJSON()\n    }\n\n    try {\n      const res = await axios.post(`${url}/notes.json`, note);\n      \n      let payload = {\n        ...note,\n        id: res.data.name,\n      }\n\n      dispatch ({\n        type: ADD_NOTE,\n        payload\n      })\n      \n    } catch (e) {\n      throw new Error(e.message)\n    }\n\n   \n  }\n\n  const removeNote = async id => {\n\n    await axios.delete (`${url}/notes/${id}.json`)\n\n    dispatch({\n      type: REMOVE_NOTE,\n      payload: id\n    })\n  }\n  return (\n    <FirebaseContext.Provider value={{showLoader, addNote, removeNote, fetchNotes,\n     loading: state.loading,\n     notes: state.notes}}>\n      {children}\n    </FirebaseContext.Provider>\n  )\n}","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport { About } from './pages/About';\nimport { Home } from './pages/Home';\nimport { Navbar } from './components/Navbar';\nimport { Alert } from './components/Alert';\nimport { AlertState } from './context/alert/AlertState';\nimport { FirebaseState } from './context/firebase/FIrebaseState';\n\nfunction App() {\n  return (\n    <FirebaseState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar/>\n            <div className=\"container pt-4\">\n              <Alert/>\n              <Switch>\n                <Route path={'/'} exact component={Home}/>\n                <Route path={'/about'} component={About}/>\n              </Switch>\n            </div>\n      </BrowserRouter>\n    </AlertState>\n    </FirebaseState>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}